#!/bin/sh

# for example:
# /usr/local/whosonfirst/go-whosonfirst-update/bin/wof-update-distributions -b dist.whosonfirst.org -r us-east-2 -c iam:

# would it be easiest just to fold all of this in to a single Go binary that uses
# all the same code as the `wof-do-something` tools below? maybe...

OS=`uname -s | tr '[:upper:]' '[:lower:]'`

PYTHON=`which python`
GETOPT=`which getopt`

for TOOL in $PYTHON $GETOPT
do

    if [ ! -x ${TOOL} ]
    then
	echo "Missing tool: '${TOOL}'"
	exit 1
    fi
    
done

WHOAMI=`${PYTHON} -c 'import os, sys; print os.path.realpath(sys.argv[1])' $0`

BIN=`dirname ${WHOAMI}`
ROOT=`dirname ${BIN}`

UTILS="${ROOT}/utils/${OS}"

LIST_REPOS="${UTILS}/wof-list-repos"
BUILD_DIST="${UTILS}/wof-dist-build"
PUBLISH_DIST="${UTILS}/wof-dist-publish"
PRUNE_DIST="${UTILS}/wof-dist-prune"
INDEX_DIST="${UTILS}/wof-dist-index"
INDEX_BUNDLES="${UTILS}/wof-bundles-index"

for TOOL in $LIST_REPOS $BUILD_DIST $PUBLISH_DIST $PRUNE_DIST $INDEX_DIST
do

    if [ ! -x ${TOOL} ]
    then
	echo "Missing tool: '${TOOL}'"
	exit 1
    fi
    
done

GITHUB_ORG="whosonfirst-data"
GITHUB_PREFIX="whosonfirst-data"

PUBLISHER="s3"

S3_BUCKET=""
S3_REGION=""
S3_PREFIX=""
S3_CREDENTIALS=""

GITHUB_ORG="whosonfirst-data"
USAGE=""

WORKDIR="/usr/local/data/dist"
LOCKFILE="${WORKDIR}/.lock"
SINCEFILE="${WORKDIR}.txt"

SINCE="P1D"
USER_SINCE=""

ARGS=`${GETOPT} b:r:p:c:w:l:s:o:x:h $*`
set -- $ARGS

for i; do
    case "$i" in
        -h  ) 
	      USAGE=1
	      shift;;
	-o  ) GITHUB_ORG=$2
	      shift; shift ;;
	-x  ) GITHUB_PREFIX=$2
	      shift; shift ;;
	-b  ) S3_BUCKET=$2
	      shift; shift ;;
	-r  ) S3_REGION=$2
	      shift; shift  ;;
	-p  ) S3_PREFIX=$2
	      shift; shift ;;
	-c  ) S3_CREDENTIALS=$2
	      shift; shift ;;
	-w  ) WORKDIR=$2
	      shift; shift ;;
	-l  ) LOCKFILE=$2
	      shift; shift ;;
	-o  ) GITHUB_ORG=$2
	      shift; shift ;;	
	-s  ) USER_SINCE=$2
	      shift; shift;;
	--  ) shift; break ;;
    esac
done

if [ "${USAGE}" = "1" ]
then
    echo "usage: ./bin/wof-update-distributions -o GITHUB_ORGANIZATION -b S3_BUCKET -p S3_PREFIX -r S3_REGION -c S3_CREDENTIALS"
    echo "options:"
    echo "...please write me"
    exit 0
fi

if [ "${S3_BUCKET}" = "" ]
then
    echo "Missing S3 bucket config"
    exit 1
fi

if [ "${S3_REGION}" = "" ]
then
    echo "Missing S3 region"
    exit 1
fi

if [ "${S3_CREDENTIALS}" = "" ]
then
    echo "Missing S3 credentials"
    exit 1
fi

if [ -f ${LOCKFILE} ]
then
    
    # maybe test the age of LOCKFILE and continue anyway if > n ?
    # (20180823/thisisaaronland)
    
    echo "lockfile '${LOCKFILE}' is present, exiting"
    exit 0
fi

if [ "${USER_SINCE}" = "" ]
then
    
    if [ -f ${SINCEFILE} ]
    then
	SINCE=`cat ${SINCEFILE}`
	echo "SINCE FROM SINCEFILE ${SINCE} (${SINCEFILE})"
    fi

fi
    
echo `date '+%s'` > ${SINCEFILE}

rm -rf ${WORKDIR}/*
echo `date` > ${LOCKFILE}

TO_PUBLISH=$@

# echo "DEBUG ${LIST_REPOS} -not-forked -org ${GITHUB_ORG} -prefix ${GITHUB_PREFIX} -updated-since ${SINCE}"

if [ "$#" -eq 0 ]
then
    echo "publish all not-forked since ${SINCE}"
    TO_PUBLISH=`${LIST_REPOS} -not-forked -org ${GITHUB_ORG} -prefix ${GITHUB_PREFIX} -updated-since ${SINCE}`
fi

if [ "$1" = "all" ]
then
    echo "publish all not-forked repos"    
    TO_PUBLISH=`${LIST_REPOS} -not-forked -org ${GITHUB_ORG} -prefix ${GITHUB_PREFIX} `
fi

echo "publish '${TO_PUBLISH}'"

for REPO in ${TO_PUBLISH}
do
    
    echo "rebuild distributions for ${REPO}"

    # see also https://github.com/whosonfirst/go-whosonfirst-dist/commit/2082a1fd03c69de66923fb1254b03fcfb31ea930 wrt/ not building bundles
    echo "${BUILD_DIST} -git-organization ${GITHUB_ORG} -workdir ${WORKDIR} -timings -verbose -build-meta=false -build-bundle=false ${REPO}"
    
    ${BUILD_DIST} -git-organization ${GITHUB_ORG} -workdir ${WORKDIR} -timings -verbose -build-meta=false -build-bundle=false ${REPO}

    if [ $? -ne 0 ]
    then
	echo "rebuild failed for ${REPO}"
	continue
    fi

    # publish distributions for whosonfirst-data-admin-ai
    # 2019/07/15 21:15:34 open /usr/local/data/dist/whosonfirst-data-admin-ai-inventory.json: no such file or directory
    # publish failed for whosonfirst-data-admin-ai
    # rebuild distributions for whosonfirst-data-admin-al
    # /usr/local/data/whosonfirst/go-whosonfirst-update/utils/linux/wof-dist-build -git-organization whosonfirst-data -workdir /usr/local/data/dist -timings -verbose -build-meta=false -build-bundle=false whosonfirst-data-admin-al
    # 21:15:35.729415 [wof-dist-build] STATUS time to clone whosonfirst-data-admin-al 1.19199751s
    
    echo "publish distributions for ${REPO}"
    
    ${PUBLISH_DIST} -workdir ${WORKDIR} -publisher ${PUBLISHER} -publisher-dsn "bucket=${S3_BUCKET} region=${S3_REGION} prefix=${S3_PREFIX} credentials=${S3_CREDENTIALS}" ${REPO}

    if [ $? -ne 0 ]
    then
	echo "publish failed for ${REPO}"
	continue
    fi
    
    echo "prune distributions"

    ${PRUNE_DIST} -publisher ${PUBLISHER} -publisher-dsn "bucket=${S3_BUCKET} region=${S3_REGION} prefix=${S3_PREFIX} credentials=${S3_CREDENTIALS}" whosonfirst-data

    if [ $? -ne 0 ]
    then
	echo "pruning failed"
	continue
    fi
    
    echo "index distributions"
    
    ${INDEX_DIST} -publisher ${PUBLISHER} -publisher-dsn "bucket=${S3_BUCKET} region=${S3_REGION} prefix=${S3_PREFIX} credentials=${S3_CREDENTIALS}" whosonfirst-data

    if [ $? -ne 0 ]
    then
	echo "indexing failed"
	continue
    fi

    rm -rf ${WORKDIR}/${REPO}*
    
done

BUNDLES_PREFIX="bundles"

if [ "${S3_PREFIX}" != "" ]
then
    BUNDLES_PREFIX="${S3_PREFIX}/bundles"
fi

${INDEX_BUNDLES} -publisher-dsn "bucket=${S3_BUCKET} region=${S3_REGION} prefix=${BUNDLES_PREFIX} credentials=${S3_CREDENTIALS}"

if [ $? -ne 0 ]
then
    echo "indexing bundles failed"
fi

rm -f ${LOCKFILE}
exit 0
